#include <stdio.h>
#include <string.h>
#include <ctype.h>

#define MAX 10

void removeLeftRecursion(char nonTerminal, char alpha[], char beta[]) {
    char newNonTerminal = nonTerminal + 'A' - 'A' + 1; // New non-terminal
    printf("%c -> %s%c'\n", nonTerminal, beta, newNonTerminal);
    printf("%c' -> %s%c' | ε\n", newNonTerminal, alpha, newNonTerminal);
}

void leftFactoring(char nonTerminal, char common[], char remaining1[], char remaining2[]) {
    char newNonTerminal = nonTerminal + 'A' - 'A' + 1; // New non-terminal
    printf("%c -> %s%c'\n", nonTerminal, common, newNonTerminal);
    printf("%c' -> %s | %s\n", newNonTerminal, remaining1, remaining2);
}

int main() {
    int choice;
    char nonTerminal, alpha[MAX], beta[MAX], common[MAX], remaining1[MAX], remaining2[MAX];

    while (1) {
        printf("\nChoose an operation:\n1. Remove Left Recursion\n2. Perform Left Factoring\n3. Exit\nChoice: ");
        scanf("%d", &choice);
        if (choice == 3) break;

        printf("Enter Non-Terminal: ");
        scanf(" %c", &nonTerminal);

        if (choice == 1) {
            printf("Enter α (recursive part): ");
            scanf("%s", alpha);
            printf("Enter β (non-recursive part): ");
            scanf("%s", beta);
            removeLeftRecursion(nonTerminal, alpha, beta);
        } else if (choice == 2) {
            printf("Enter common prefix: ");
            scanf("%s", common);
            printf("Enter first remaining part: ");
            scanf("%s", remaining1);
            printf("Enter second remaining part: ");
            scanf("%s", remaining2);
            leftFactoring(nonTerminal, common, remaining1, remaining2);
        } else {
            printf("Invalid choice!\n");
        }
    }

    return 0;
}
